{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\project_react\\\\src\\\\app_components\\\\State\\\\TaskList.js\";\nimport React from \"react\";\nimport TaskAdapter from \"./TaskAdapter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  let {\n    tasks\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => {\n      const adapter = new TaskAdapter(task);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: adapter.getName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: adapter.getPriority()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: adapter.isDone() ? \"Finalizat\" : \"Nefinalizat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)]\n      }, adapter.getId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskAdapter","jsxDEV","_jsxDEV","TaskList","_ref","tasks","children","map","task","adapter","getName","fileName","_jsxFileName","lineNumber","columnNumber","getPriority","isDone","getId","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/project_react/src/app_components/State/TaskList.js"],"sourcesContent":["import React from \"react\";\r\nimport TaskAdapter from \"./TaskAdapter\";\r\n\r\nconst TaskList = ({ tasks }) => {\r\n    return (\r\n        <ul>\r\n            {tasks.map((task) => {\r\n                const adapter = new TaskAdapter(task);\r\n                return (\r\n                    <li key={adapter.getId()}>\r\n                        <span>{adapter.getName()}</span>\r\n                        <span>{adapter.getPriority()}</span>\r\n                        <span>{adapter.isDone() ? \"Finalizat\" : \"Nefinalizat\"}</span>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,IAAA;EACvB,oBACIF,OAAA;IAAAI,QAAA,EACKD,KAAK,CAACE,GAAG,CAAEC,IAAI,IAAK;MACjB,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAACQ,IAAI,CAAC;MACrC,oBACIN,OAAA;QAAAI,QAAA,gBACIJ,OAAA;UAAAI,QAAA,EAAOG,OAAO,CAACC,OAAO,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCZ,OAAA;UAAAI,QAAA,EAAOG,OAAO,CAACM,WAAW,CAAC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCZ,OAAA;UAAAI,QAAA,EAAOG,OAAO,CAACO,MAAM,CAAC,CAAC,GAAG,WAAW,GAAG;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAHxDL,OAAO,CAACQ,KAAK,CAAC,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpB,CAAC;IAEb,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACI,EAAA,GAfIf,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}