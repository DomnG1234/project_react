{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\project_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './style/App.css';\nimport TaskForm from \"./app_components/TaskForm\";\nimport Task from \"./app_components/Task\";\nimport { useEffect, useState } from \"react\";\nimport { AllTasksFilter, CompletedTasksFilter, IncompleteTasksFilter } from './app_components/FilterStrategy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"toate\"); // Starea pentru tipul de filtrare\n  // Hook-ul useEffect pentru a salva sarcinile în localStorage atunci când se modifică starea tasks\n\n  // Funcție pentru filtrarea sarcinilor\n  const filterTasks = tasks => {\n    let filterStrategy;\n    if (filter === \"finalizate\") {\n      filterStrategy = new CompletedTasksFilter();\n    } else if (filter === \"nefinalizate\") {\n      filterStrategy = new IncompleteTasksFilter();\n    } else {\n      filterStrategy = new AllTasksFilter();\n    }\n    return filterStrategy.filter(tasks);\n  };\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(savedTasks || []);\n  }, []);\n\n  /* setTasks pentru a actualiza starea anterioară a obiectului tasks.*/\n  const addTask = name => {\n    setTasks(prev => {\n      return [...prev, {\n        name: name,\n        done: false\n      }];\n    });\n  };\n  const removeTask = indexToRemove => {\n    setTasks(prev => {\n      return prev.filter((taskObject, index) => index !== indexToRemove);\n    });\n  };\n  const updateTaskDone = (taskIndex, newDone) => {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[taskIndex].done = newDone;\n      return newTasks;\n    });\n  };\n  const renameTask = (index, newName) => {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = newName;\n      return newTasks;\n    });\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LIST\\u0102 DE ACTIVIT\\u0102\\u021AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), \"return (\", /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LIST\\u0102 DE ACTIVIT\\u0102\\u021AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filterSelect\",\n          children: \"Filtrare: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"filterSelect\",\n          value: filter,\n          onChange: handleFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"toate\",\n            children: \"Toate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"finalizate\",\n            children: \"Finalizate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"nefinalizate\",\n            children: \"Nefinalizate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"priorityFilterSelect\",\n          children: \"Filtrare dup\\u0103 prioritate: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"priorityFilterSelect\",\n          value: priorityFilter,\n          onChange: handlePriorityFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"toate\",\n            children: \"Toate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"urgent\",\n            children: \"Urgent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mediu\",\n            children: \"Mediu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"scazut\",\n            children: \"Scazut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), filterPriority(filterTasks(tasks)).map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n        ...task,\n        onRename: newName => renameTask(index, newName),\n        onTrash: () => removeTask(index),\n        onToggle: done => updateTaskDone(index, done)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"mbJFjLa4dcruYBoUExoQddeCb1s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskForm","Task","useEffect","useState","AllTasksFilter","CompletedTasksFilter","IncompleteTasksFilter","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","filterTasks","filterStrategy","length","localStorage","setItem","JSON","stringify","savedTasks","parse","getItem","addTask","name","prev","done","removeTask","indexToRemove","taskObject","index","updateTaskDone","taskIndex","newDone","newTasks","renameTask","newName","handleFilterChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","priorityFilter","handlePriorityFilterChange","onAdd","filterPriority","map","task","onRename","onTrash","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/project_react/src/App.js"],"sourcesContent":["import './style/App.css';\nimport TaskForm from \"./app_components/TaskForm\";\nimport Task from \"./app_components/Task\";\nimport { useEffect, useState } from \"react\";\nimport { AllTasksFilter, CompletedTasksFilter, IncompleteTasksFilter } from './app_components/FilterStrategy';\n\nconst App = () => {\n    const [tasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState(\"toate\"); // Starea pentru tipul de filtrare\n    // Hook-ul useEffect pentru a salva sarcinile în localStorage atunci când se modifică starea tasks\n\n\n\n    // Funcție pentru filtrarea sarcinilor\n    const filterTasks = (tasks) => {\n        let filterStrategy;\n\n        if (filter === \"finalizate\") {\n            filterStrategy = new CompletedTasksFilter();\n        } else if (filter === \"nefinalizate\") {\n            filterStrategy = new IncompleteTasksFilter();\n        } else {\n            filterStrategy = new AllTasksFilter();\n        }\n\n        return filterStrategy.filter(tasks);\n    };\n    useEffect(() => {\n        if (tasks.length === 0) return;\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }, [tasks]);\n\n\n    useEffect(() => {\n        const savedTasks = JSON.parse(localStorage.getItem('tasks'));\n        setTasks(savedTasks || []);\n    }, []);\n\n\n   /* setTasks pentru a actualiza starea anterioară a obiectului tasks.*/\n    const addTask = (name) => {\n        setTasks(prev => {\n            return [...prev, { name: name, done: false}];\n        });\n    }\n\n    const removeTask = (indexToRemove) => {\n        setTasks(prev => {\n            return prev.filter((taskObject, index) => index !== indexToRemove);\n        });\n    }\n\n    const updateTaskDone = (taskIndex, newDone) => {\n        setTasks(prev => {\n            const newTasks = [...prev];\n            newTasks[taskIndex].done = newDone;\n            return newTasks;\n        });\n    }\n\n    const renameTask = (index, newName) => {\n        setTasks(prev => {\n            const newTasks = [...prev];\n            newTasks[index].name = newName;\n            return newTasks;\n        })\n    }\n\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };\n    return (\n        <main>\n\n            <h1>LISTĂ DE ACTIVITĂȚI</h1>\n            return (\n            <main>\n                <h1>LISTĂ DE ACTIVITĂȚI</h1>\n                <div className=\"filter\">\n                    <label htmlFor=\"filterSelect\">Filtrare: </label>\n                    <select id=\"filterSelect\" value={filter} onChange={handleFilterChange}>\n                        <option value=\"toate\">Toate</option>\n                        <option value=\"finalizate\">Finalizate</option>\n                        <option value=\"nefinalizate\">Nefinalizate</option>\n                    </select>\n                </div>\n                <div className=\"filter\">\n                    <label htmlFor=\"priorityFilterSelect\">Filtrare după prioritate: </label>\n                    <select id=\"priorityFilterSelect\" value={priorityFilter} onChange={handlePriorityFilterChange}>\n                        <option value=\"toate\">Toate</option>\n                        <option value=\"urgent\">Urgent</option>\n                        <option value=\"mediu\">Mediu</option>\n                        <option value=\"scazut\">Scazut</option>\n                    </select>\n                </div>\n                <TaskForm onAdd={addTask} />\n                {filterPriority(filterTasks(tasks)).map((task, index) => (\n                    <Task\n                        key={index}\n                        {...task}\n                        onRename={(newName) => renameTask(index, newName)}\n                        onTrash={() => removeTask(index)}\n                        onToggle={(done) => updateTaskDone(index, done)}\n                    />\n                ))}\n            </main>\n            );\n\n\n        </main>\n    );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}